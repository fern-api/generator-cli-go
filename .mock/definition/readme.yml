imports:
  feature: feature.yml
types:
  ReadmeConfig:
    properties:
      remote:
        type: optional<Remote>
        docs: >
          If specified, the original README.md will be fetched from this remote
          (if it exists).
      language: LanguageInfo
      organization: string
      bannerLink: optional<string>
      introduction: optional<string>
      apiReferenceLink: optional<string>
      referenceMarkdownPath: optional<string>
      requirements: optional<list<string>>
      features:
        type: optional<list<ReadmeFeature>>
        docs: |
          Specifies the list of features supported by a specific generator.
          The features are rendered in the order they're specified.
    docs: >
      The configuration used to generate a README.md file.

      The information described here is a combination of user-defined
      information

      (i.e. specified in the generators.yml), and dynamically generated
      information

      that comes from each generator (i.e. features, requirements, and more).
  Remote:
    union:
      github: GithubRemote
    docs: |
      The remote where the README.md is hosted.
  GithubRemote:
    properties:
      repoUrl:
        type: string
        docs: A full repo url (i.e. https://github.com/fern-api/fern)
      installationToken:
        type: string
        docs: The token used to clone the GitHub repository.
  ReadmeFeature:
    extends: feature.FeatureSpec
    properties:
      snippets: optional<list<string>>
      snippetsAreOptional:
        type: boolean
        docs: >
          If true, the feature block should be rendered even if we don't receive
          a snippet for it.

          This is useful for features that are always supported, but might not
          require a snippet

          to explain.
    docs: |
      A single feature supported by a generator (e.g. PAGINATION).
  LanguageInfo:
    union:
      typescript: TypescriptInfo
      python: PythonInfo
      go: GoInfo
      java: JavaInfo
      ruby: RubyInfo
      csharp: CsharpInfo
      php: PhpInfo
    docs: >
      The language and its associated publish information (if any).

      This is used to generate badges, the installation guide, and determine
      what language to

      use when surrounding the snippets in a code block.
  TypescriptInfo:
    properties:
      publishInfo: optional<NpmPublishInfo>
  PythonInfo:
    properties:
      publishInfo: optional<PypiPublishInfo>
  GoInfo:
    properties:
      publishInfo: optional<GoPublishInfo>
  JavaInfo:
    properties:
      publishInfo: optional<MavenPublishInfo>
  RubyInfo:
    properties:
      publishInfo: optional<RubyGemsPublishInfo>
  CsharpInfo:
    properties:
      publishInfo: optional<NugetPublishInfo>
  PhpInfo:
    properties:
      publishInfo: optional<ComposerPublishInfo>
  ComposerPublishInfo:
    properties:
      packageName: string
  NpmPublishInfo:
    properties:
      packageName: string
  PypiPublishInfo:
    properties:
      packageName: string
  GoPublishInfo:
    properties:
      owner: string
      repo: string
      version: string
  MavenPublishInfo:
    properties:
      artifact: string
      group: string
      version: string
  RubyGemsPublishInfo:
    properties:
      packageName: string
  NugetPublishInfo:
    properties:
      packageName: string
